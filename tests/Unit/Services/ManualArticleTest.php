<?php
/**
 * Created by PhpStorm.
 * User: kkame
 * Date: 18. 10. 14
 * Time: 오전 1:49
 */

namespace Tests\Unit\Services;


use App\Services\Markdown\DocumentParser;
use App\Services\Markdown\ManualArticle;
use App\Services\Markdown\SubNavigatorExtractor;
use Tests\TestCase;

class ManualArticleTest extends TestCase
{

    /**
     * @var ManualArticle
     */
    private $article;

    protected function setUp():void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->article = new ManualArticle($this->app->make(DocumentParser::class),
            $this->app->make(SubNavigatorExtractor::class)
        );
    }


    /**
     * @test
     */
    public function 버전을_지정하지_않을_경우_예외발생확인()
    {
        $this->expectException(\App\Exceptions\BadArgumentsException::class);
        $this->article->setDocumentFilename('documentation');
        $this->article->getContent();
    }

    /**
     * @test
     */
    public function 문서를_지정하지_않을_경우_예외발생확인()
    {
        $this->expectException(\App\Exceptions\BadArgumentsException::class);
        $this->article->setVersion(config('docs.default'));
        $this->article->getContent();
    }

    /**
     * @test
     */
    public function 존재하지_않는_문서_예외발생확인()
    {
        $this->expectException(\Illuminate\Contracts\Filesystem\FileNotFoundException::class);
        $this->article->setVersion(config('docs.default'));
        $this->article->setLanguage('ko');
        $this->article->setDocumentFilename('test');
        $this->article->getContent();
    }


    public function test_정상문서파일확인()
    {

        $this->article->setLanguage('ko');
        $this->article->setVersion(config('docs.default'));
        $this->article->setDocumentFilename('documentation');

        $contents = $this->article->getContent();
        $this->assertTrue(is_string($contents));

        $subContents = $this->article->getSubTableContent();
        $this->assertTrue(is_string($subContents));
    }

}
